-- Update record status of P_TIME_SHEET
-- page variable:
-- P33_EMPLOYEE_NAME
-- P33_DATE_DEFAULT
-- P33_DATE_TO
-- P33_DATE_FROM


-- STATUS LIST
		-- 1	Need to confirm	10	-	-
		-- 2	Confirmed	2	-	-
		-- 3	In Review	6	-	-
		-- 4	Approved	3	-	-
		-- 5	Rejected	4	-	-
		-- 6	Submitted to HR	12	-	-
		-- 7	Sent to D365	11	-	-
		-- 8	Transferred	9	-	-

declare
    o_status number;
    v_start_time NUMBER;
    v_end_time NUMBER;
begin
    if trim(:P33_EMPLOYEE_NAME) = 'all' then    -- case when select all employee

        -- call SP_UPDATE_TIME_SHEET for all employee
        for rec in (select TS_HEADER_ID from P_TIME_SHEET where STATUS = 12 and DATE_TS BETWEEN :P33_DATE_FROM AND :P33_DATE_TO)
        loop
            SP_UPDATE_TIME_SHEET(rec.TS_HEADER_ID, o_status);

            v_start_time := DBMS_UTILITY.GET_TIME;  -- Current time in 1/100ths of a second
            LOOP
                v_end_time := DBMS_UTILITY.GET_TIME;
                EXIT WHEN (v_end_time - v_start_time) > (2 * 100);  -- 5 seconds
            END LOOP;

            -- update status of P_TIME_SHEET
            if o_status = 1 then -- Send API successfully
                UPDATE P_TIME_SHEET 
                SET STATUS = 11
                WHERE STATUS = 12
                AND TS_HEADER_ID = rec.TS_HEADER_ID;
            end if;
        end loop;

        -- write log
        INSERT INTO OUTPUT_LOGS (DATE1, STR1, STR2, STR3)
        VALUES (sysdate, 'TIMESHEET: SEND_TO_D365', 'ALL', 'From: ' || :P33_DATE_FROM || ' To: ' || :P33_DATE_TO);
    else
        -- case when select an employee
        for rec in (select TS_HEADER_ID from P_TIME_SHEET where EMPLOYEE_CODE = :P33_EMPLOYEE_NAME and
                    STATUS = 12 and DATE_TS BETWEEN :P33_DATE_FROM AND :P33_DATE_TO)
        loop
            SP_UPDATE_TIME_SHEET(rec.TS_HEADER_ID, o_status);

            v_start_time := DBMS_UTILITY.GET_TIME;  -- Current time in 1/100ths of a second
            LOOP
                v_end_time := DBMS_UTILITY.GET_TIME;
                EXIT WHEN (v_end_time - v_start_time) > (2 * 100);  -- 5 seconds
            END LOOP;

            -- update status of P_TIME_SHEET
            if o_status = 1 then -- Send API successfully
                UPDATE P_TIME_SHEET 
                SET STATUS = 11
                WHERE STATUS = 12
                AND TS_HEADER_ID = rec.TS_HEADER_ID;
            end if;
        end loop;

        -- write log
        INSERT INTO OUTPUT_LOGS (DATE1, STR1, STR2, STR3)
        VALUES (sysdate, 'TIMESHEET: SEND_TO_D365', :P33_EMPLOYEE_NAME, 'From: ' || :P33_DATE_FROM || ' To: ' || :P33_DATE_TO);
    end if; 

    commit;
end;

-- table: P_TIME_SHEET
--   CREATE TABLE "P_TIME_SHEET" 
--    (	"ID" NUMBER(8,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
-- 	"EMPLOYEE_CODE" NVARCHAR2(50) COLLATE "USING_NLS_COMP", 
-- 	"WORKER_ID" NVARCHAR2(50) COLLATE "USING_NLS_COMP", 
-- 	"DATE_TS" DATE, 
-- 	"REASON_ADJUSTMENT" NVARCHAR2(100) COLLATE "USING_NLS_COMP", 
-- 	"IS_OK" NUMBER(1,0) DEFAULT 0, 
-- 	"STATUS" NUMBER, 
-- 	"NOTE" NVARCHAR2(100) COLLATE "USING_NLS_COMP", 
-- 	"TS_HEADER_ID" NVARCHAR2(50) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
-- 	"PROFILE_ID" NVARCHAR2(30) COLLATE "USING_NLS_COMP", 
-- 	 CONSTRAINT "P_TIME_SHEET_PK" PRIMARY KEY ("ID")

-- table: OUTPUT_LOGS
--   CREATE TABLE "OUTPUT_LOGS" 
--    (	"ID" NUMBER(5,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
-- 	"DATE1" DATE, 
-- 	"DATE2" DATE, 
-- 	"DATE3" DATE, 
-- 	"STR1" NVARCHAR2(200) COLLATE "USING_NLS_COMP", 
-- 	"STR2" NVARCHAR2(5000) COLLATE "USING_NLS_COMP", 
-- 	"STR3" NVARCHAR2(5000) COLLATE "USING_NLS_COMP", 
-- 	"NUMBER1" NUMBER(5,0), 
-- 	"NUMBER2" NUMBER(5,0), 
-- 	 CONSTRAINT "OUTPUT_LOGS_PK" PRIMARY KEY ("ID")
--   USING INDEX  ENABLE
--    )  DEFAULT COLLATION "USING_NLS_COMP" ;
